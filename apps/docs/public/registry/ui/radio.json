{
  "name": "radio",
  "dependencies": [
    ""
  ],
  "files": [
    {
      "name": "radio.tsx",
      "content": "import { ComponentProps } from \"react\";\nimport { VariantProps, tv } from \"tailwind-variants\";\n\nconst radioVariants = tv({\n  slots: {\n    wrapper: \"inline-flex items-center\",\n    label: \"relative flex cursor-pointer items-center rounded-full p-2\",\n    input: [\n      \"before:content[''] peer relative h-5 w-5 cursor-pointer \",\n      \"appearance-none rounded-full border\",\n      \"transition-all before:absolute before:top-2/4 before:left-2/4\",\n      \"before:block before:h-12 before:w-12 before:-translate-y-2/4 \",\n      \"before:-translate-x-2/4 before:rounded-full\",\n      \"before:opacity-0 before:transition-opacity\",\n      \"hover:before:opacity-10\",\n    ],\n    indicator:\n      \"pointer-events-none absolute top-2/4 left-2/4 -translate-y-2/4 -translate-x-2/4 opacity-0 transition-opacity peer-checked:opacity-100\",\n  },\n  variants: {\n    color: {\n      primary: {\n        input:\n          \"border-blue-500 text-blue-500 before:bg-blue-500 checked:border-blue-500 checked:before:bg-blue-500\",\n        indicator: \"text-blue-500\",\n      },\n      secondary: {\n        input:\n          \"border-purple-500 text-purple-500 before:bg-purple-500 checked:border-purple-500 checked:before:bg-purple-500\",\n        indicator: \"text-purple-500\",\n      },\n      success: {\n        input:\n          \"border-green-500 text-green-500 before:bg-green-500 checked:border-green-500 checked:before:bg-green-500\",\n        indicator: \"text-green-500\",\n      },\n      warning: {\n        input:\n          \"border-yellow-500 text-yellow-500 before:bg-yellow-500 checked:border-yellow-500 checked:before:bg-yellow-500\",\n        indicator: \"text-yellow-500\",\n      },\n      error: {\n        input:\n          \"border-red-500 text-red-500 before:bg-red-500 checked:border-red-500 checked:before:bg-red-500\",\n        indicator: \"text-red-500\",\n      },\n    },\n    size: {\n      xs: {\n        input: \"h-3 w-3\",\n      },\n      sm: {\n        input: \"h-4 w-4\",\n      },\n      md: {\n        input: \"h-5 w-5\",\n      },\n      lg: {\n        input: \"h-6 w-6\",\n      },\n      xl: {\n        input: \"h-7 w-7\",\n      },\n    },\n    rounded: {\n      none: {\n        input: \"rounded-none\",\n      },\n      sm: {\n        input: \"rounded-sm\",\n      },\n      rounded: {\n        input: \"rounded\",\n      },\n      md: {\n        input: \"rounded-md\",\n      },\n      lg: {\n        input: \"rounded-lg\",\n      },\n      xl: {\n        input: \"rounded-xl\",\n      },\n      \"2xl\": {\n        input: \"rounded-2xl\",\n      },\n      \"3xl\": {\n        input: \"rounded-3xl\",\n      },\n      full: {\n        input: \"rounded-full\",\n      },\n    },\n    disabled: {\n      true: {\n        input: \"opacity-80 !cursor-not-allowed\",\n      },\n    },\n  },\n  defaultVariants: {\n    // rounded: \"md\",\n    color: \"primary\",\n    // size: \"md\",\n  },\n});\n\ntype RadioVariants = VariantProps<typeof radioVariants>;\n\nexport interface RadioProps\n  extends Omit<ComponentProps<\"input\">, \"color\" | \"disabled\" | \"size\">,\n    RadioVariants {}\n\nconst Radio: React.FC<RadioProps> = ({\n  disabled,\n  size,\n  rounded,\n  color,\n  className: classes,\n  ...props\n}) => {\n  const { wrapper, label, input, indicator } = radioVariants({\n    color,\n    disabled,\n    rounded,\n    size,\n  });\n\n  return (\n    <>\n      <div className={wrapper()}>\n        <label className={label()} htmlFor=\"radio-1\" data-ripple-dark=\"true\">\n          <input type=\"radio\" className={input()} id=\"radio-1\" {...props} />\n\n          <div className={indicator()}>\n            <svg\n              xmlns=\"http://www.w3.org/5000/svg\"\n              className=\"h-3.5 w-3.5\"\n              viewBox=\"0 0 16 16\"\n              fill=\"currentColor\"\n            >\n              <circle data-name=\"ellipse\" cx=\"8\" cy=\"8\" r=\"8\"></circle>\n            </svg>\n          </div>\n        </label>\n      </div>\n    </>\n  );\n};\n\nRadio.displayName = \"Radio\";\n\nexport { Radio, radioVariants };\n"
    }
  ],
  "type": "components:ui"
}