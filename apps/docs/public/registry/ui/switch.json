{
  "name": "switch",
  "dependencies": [
    ""
  ],
  "files": [
    {
      "name": "switch.tsx",
      "content": "import { ComponentProps } from \"react\";\nimport { VariantProps, tv } from \"tailwind-variants\";\n\nconst switchVariants = tv({\n  slots: {\n    label: \"flex items-center cursor-pointer\",\n    wrapper: \"relative\",\n    input: \"sr-only peer\",\n    content:\n      \"peer-focus:outline-none peer-focus:ring-4 block bg-gray-200 rounded-full\",\n    dot: \"dot peer-checked:translate-x-full absolute left-1 top-1 bg-white rounded-full transition\",\n  },\n  variants: {\n    color: {\n      primary: {\n        content: \"peer-focus:ring-blue-300 peer-checked:bg-blue-500\",\n      },\n      secondary: {\n        content: \"peer-focus:ring-purple-300 peer-checked:bg-purple-500\",\n      },\n      success: {\n        content: \"peer-focus:ring-green-300 peer-checked:bg-green-500\",\n      },\n      warning: {\n        content: \"peer-focus:ring-yellow-300 peer-checked:bg-yellow-500\",\n      },\n      error: {\n        content: \"peer-focus:ring-red-300 peer-checked:bg-red-500\",\n      },\n    },\n    size: {\n      xs: {\n        content: \"w-10 h-6\",\n        dot: \"w-4 h-4\",\n      },\n      sm: {\n        content: \"w-12 h-7\",\n        dot: \"w-5 h-5\",\n      },\n      md: {\n        content: \"w-14 h-8\",\n        dot: \"w-6 h-6\",\n      },\n      lg: {\n        content: \"w-16 h-9\",\n        dot: \"w-7 h-7\",\n      },\n      xl: {\n        content: \"w-20 h-11\",\n        dot: \"w-9 h-9\",\n      },\n    },\n    disabled: {\n      true: {\n        input: \"opacity-80 !cursor-not-allowed\",\n      },\n    },\n  },\n  defaultVariants: {\n    color: \"primary\",\n    size: \"md\",\n  },\n});\n\ntype SwitchVariants = VariantProps<typeof switchVariants>;\n\nexport interface SwitchProps\n  extends Omit<ComponentProps<\"input\">, \"color\" | \"disabled\" | \"size\">,\n    SwitchVariants {}\n\nconst Switch: React.FC<SwitchProps> = ({\n  disabled,\n  size,\n  color,\n  className: classes,\n  ...props\n}) => {\n  const { content, wrapper, label, input, dot } = switchVariants({\n    color,\n    disabled,\n    size,\n  });\n\n  return (\n    <>\n      <label className={label()}>\n        <div className={wrapper()}>\n          <input type=\"checkbox\" {...props} className={input()} />\n          <div className={content()} />\n\n          <div className={dot()}>\n            {/* <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-3.5 w-3.5\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              stroke=\"currentColor\"\n              stroke-width=\"1\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                clip-rule=\"evenodd\"\n              ></path>\n              </svg> */}\n          </div>\n        </div>\n\n        <div className=\"ml-3 text-gray-700 font-medium\">Toggle Me!</div>\n      </label>\n    </>\n  );\n};\n\nSwitch.displayName = \"Switch\";\n\nexport { Switch, switchVariants };\n"
    }
  ],
  "type": "components:ui"
}