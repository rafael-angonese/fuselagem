{
  "name": "tooltip",
  "dependencies": [
    ""
  ],
  "files": [
    {
      "name": "tooltip.tsx",
      "content": "import { ComponentProps, ReactNode } from \"react\";\nimport { VariantProps, tv } from \"tailwind-variants\";\n\nconst tooltipVariants = tv({\n  slots: {\n    container: \"relative inline-flex cursor-pointer w-fit group\",\n    content: [\n      \"hidden group-hover:flex whitespace-nowrap\",\n      \"text-white absolute z-50 p-2 text-base rounded-md\",\n      \"bg-slate-600 shadow-lg shadow-slate-600\",\n    ],\n    arrow: \"absolute w-0 h-0\",\n  },\n  variants: {\n    position: {\n      top: {\n        content: \"bottom-[calc(100%+18px)] left-1/2\t-translate-x-1/2\",\n        arrow: [\n          \"bottom-[-8px] left-[calc(50%-10px)]\",\n          \"border-r-[10px] border-r-transparent\",\n          \"border-t-[10px] border-t-slate-600\",\n          \"border-l-[10px] border-l-transparent\",\n        ],\n      },\n      bottom: {\n        content: \"top-[calc(100%+18px)] left-1/2 -translate-x-1/2\",\n        arrow: [\n          \"top-[-8px] left-[calc(50%-10px)]\",\n          \"border-r-[10px] border-r-transparent\",\n          \"border-b-[10px] border-b-slate-600\",\n          \"border-l-[10px] border-l-transparent\",\n        ],\n      },\n      left: {\n        content: \"right-[calc(100%+18px)] top-1/2 -translate-y-1/2\",\n        arrow: [\n          \"right-[-8px] top-[calc(50%-10px)]\",\n          \"border-t-[10px] border-t-transparent\",\n          \"border-l-[10px] border-l-slate-600\",\n          \"border-b-[10px] border-b-transparent\",\n        ],\n      },\n      right: {\n        content: \"left-[calc(100%+18px)] top-1/2 -translate-y-1/2\",\n        arrow: [\n          \"left-[-8px] top-[calc(50%-10px)]\",\n          \"border-t-[10px] border-t-transparent\",\n          \"border-r-[10px] border-r-slate-600\",\n          \"border-b-[10px] border-b-transparent\",\n        ],\n      },\n    },\n    color: {\n      primary: {\n        content: \"\",\n      },\n      secondary: {\n        content: \"\",\n      },\n      success: {\n        content: \"\",\n      },\n      warning: {\n        content: \"\",\n      },\n      error: {\n        content: \"\",\n      },\n    },\n    rounded: {\n      none: {\n        content: \"rounded-none\",\n      },\n      sm: {\n        content: \"rounded-sm\",\n      },\n      rounded: {\n        content: \"rounded\",\n      },\n      md: {\n        content: \"rounded-md\",\n      },\n      lg: {\n        content: \"rounded-lg\",\n      },\n      xl: {\n        content: \"rounded-xl\",\n      },\n      \"2xl\": {\n        content: \"rounded-2xl\",\n      },\n      \"3xl\": {\n        content: \"rounded-3xl\",\n      },\n      full: {\n        content: \"rounded-full\",\n      },\n    },\n  },\n  defaultVariants: {\n    position: \"top\",\n    color: \"primary\",\n  },\n});\n\ntype TooltipVariants = VariantProps<typeof tooltipVariants>;\n\nexport interface TooltipProps\n  extends Omit<ComponentProps<\"div\">, \"color\" | \"disabled\" | \"size\">,\n    TooltipVariants {\n  title?: string;\n  children?: ReactNode;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({\n  position,\n  color,\n  rounded,\n  className: classes,\n  children,\n  title,\n  ...props\n}) => {\n  const { container, content, arrow } = tooltipVariants({\n    color,\n    position,\n    rounded,\n  });\n\n  return (\n    <>\n      <div className={container()}>\n        <div {...props}>{children}</div>\n\n        <div className={content()}>\n          <span className={arrow()}></span>\n          {title}\n        </div>\n      </div>\n    </>\n  );\n};\n\nTooltip.displayName = \"Tooltip\";\n\nexport { Tooltip, tooltipVariants };\n"
    }
  ],
  "type": "components:ui"
}