{
  "name": "input-text",
  "dependencies": [
    ""
  ],
  "files": [
    {
      "name": "input-text.tsx",
      "content": "import React, { ComponentProps } from \"react\";\nimport { VariantProps, tv } from \"tailwind-variants\";\n\nconst inputTextVariants = tv({\n  slots: {\n    wrapper: \"relative\",\n    input: [\n      \"border-2 text-sm rounded-lg focus:outline-1 block p-2.5 placeholder:text-gray-400\",\n      \"bg-white border-gray-300 hover:border-gray-400 text-black focus:outline-gray-500\",\n      \"dark:bg-black dark:text-white dark:border-gray-500 dark:hover:border-gray-400 focus:dark:border-gray-300 dark:focus:outline-0\",\n      `data-[left-content=\"true\"]:pl-9 data-[right-content=\"true\"]:pr-9`,\n    ],\n  },\n  variants: {\n    size: {\n      xs: {\n        input: \"p-2.5 text-base\",\n      },\n      sm: {\n        input: \"p-2.5 text-base\",\n      },\n      md: {\n        input: \"p-2.5 text-base\",\n      },\n      lg: {\n        input: \"p-2.5 text-base\",\n      },\n      xl: {\n        input: \"p-2.5 text-base\",\n      },\n    },\n    fullWidth: {\n      true: {\n        input: \"w-full\",\n      },\n    },\n    disabled: {\n      true: {\n        input: \"opacity-80 !cursor-not-allowed\",\n      },\n    },\n    isInvalid: {\n      true: {\n        input: [\n          \"placeholder:text-red-500\",\n          \"border-red-500 hover:border-red-500 text-red-500 focus:outline-red-500\",\n          \"dark:text-red-500 dark:border-red-500 dark:hover:border-red-500 focus:dark:border-red-500 dark:focus:outline-0\",\n        ],\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n  },\n});\n\ntype InputTextVariants = VariantProps<typeof inputTextVariants>;\n\nexport interface InputTextProps\n  extends Omit<ComponentProps<\"input\">, \"color\" | \"size\">,\n    InputTextVariants {\n  disabled?: boolean;\n  isInvalid?: boolean;\n  leftContent?: React.ReactElement;\n  rightContent?: React.ReactElement;\n}\n\nconst InputText: React.FC<InputTextProps> = ({\n  disabled,\n  isInvalid,\n  size,\n  fullWidth,\n  leftContent,\n  rightContent,\n  className,\n  ...props\n}) => {\n  const { wrapper, input } = inputTextVariants({\n    disabled,\n    isInvalid,\n    fullWidth,\n    size,\n  });\n\n  return (\n    <div className={wrapper()}>\n      {leftContent && (\n        <div className=\"flex absolute inset-y-0 left-0 items-center pl-2 pointer-events-none\">\n          {leftContent}\n        </div>\n      )}\n      <input\n        className={input({ className })}\n        data-left-content={leftContent ? true : false}\n        data-right-content={rightContent ? true : false}\n        disabled={disabled}\n        {...props}\n      />\n\n      {rightContent && (\n        <div className=\"flex absolute inset-y-0 right-0 items-center pr-2\">\n          {rightContent}\n        </div>\n      )}\n    </div>\n  );\n};\n\nInputText.displayName = \"InputText\";\n\nexport { InputText, inputTextVariants };\n"
    }
  ],
  "type": "components:ui"
}