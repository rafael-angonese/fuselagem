{
  "name": "badge",
  "dependencies": [
    ""
  ],
  "files": [
    {
      "name": "badge.tsx",
      "content": "import React, { ComponentProps, ReactNode } from \"react\";\nimport { VariantProps, tv } from \"tailwind-variants\";\n\nconst badgeVariants = tv({\n  base: \"text-white text-xs font-semibold rounded-full max-w-fit\",\n  variants: {\n    variant: {\n      solid: \"\",\n      outlined: \"\",\n    },\n    color: {\n      primary: \"\",\n      secondary: \"\",\n      success: \"\",\n      warning: \"\",\n      error: \"\",\n    },\n    size: {\n      xs: \"px-2 py-0.5 text-xs\",\n      sm: \"px-2.5 py-0.5 text-sm\",\n      md: \"px-3 py-1 text-base\",\n      lg: \"px-3.5 py-1.5 text-lg\",\n      xl: \"px-4 py-2 text-xl\",\n    },\n    shadow: {\n      true: \"shadow-lg\",\n    },\n  },\n  compoundVariants: [\n    // SOLID\n    {\n      variant: \"solid\",\n      color: \"primary\",\n      class: \"bg-blue-400\",\n    },\n    {\n      variant: \"solid\",\n      color: \"secondary\",\n      class: \"bg-purple-400\",\n    },\n    {\n      variant: \"solid\",\n      color: \"success\",\n      class: \"bg-green-400\",\n    },\n    {\n      variant: \"solid\",\n      color: \"warning\",\n      class: \"bg-yellow-400\",\n    },\n    {\n      variant: \"solid\",\n      color: \"error\",\n      class: \"bg-red-400\",\n    },\n\n    // OUTLINED\n    {\n      variant: \"outlined\",\n      color: \"primary\",\n      class:\n        \"text-blue-400 hover:text-white border border-blue-400 hover:bg-blue-500 focus:ring-blue-300 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-600 dark:focus:ring-blue-800\",\n    },\n    {\n      variant: \"outlined\",\n      color: \"secondary\",\n      class:\n        \"text-purple-400 hover:text-white border border-purple-400 hover:bg-purple-500 focus:ring-purple-300 dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900\",\n    },\n    {\n      variant: \"outlined\",\n      color: \"success\",\n      class:\n        \"text-green-400 hover:text-white border border-green-400 hover:bg-green-500 focus:ring-green-300 dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800\",\n    },\n    {\n      variant: \"outlined\",\n      color: \"warning\",\n      class:\n        \"text-yellow-400 hover:text-white border border-yellow-400 hover:bg-yellow-500 focus:ring-yellow-300 dark:border-yellow-300 dark:text-yellow-300 dark:hover:text-white dark:hover:bg-yellow-400 dark:focus:ring-yellow-900\",\n    },\n    {\n      variant: \"outlined\",\n      color: \"error\",\n      class:\n        \"text-red-400 hover:text-white border border-red-400 hover:bg-red-500 focus:ring-red-300 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900\",\n    },\n\n    // SHADOW\n    {\n      shadow: true,\n      color: \"primary\",\n      class: \"shadow-blue-400/50\",\n    },\n    {\n      shadow: true,\n      color: \"secondary\",\n      class: \"shadow-purple-400/50\",\n    },\n    {\n      shadow: true,\n      color: \"success\",\n      class: \"shadow-green-400/50\",\n    },\n    {\n      shadow: true,\n      color: \"warning\",\n      class: \"shadow-yellow-400/50\",\n    },\n    {\n      shadow: true,\n      color: \"error\",\n      class: \"shadow-red-400/50\",\n    },\n  ],\n  defaultVariants: {\n    variant: \"solid\",\n    color: \"primary\",\n    size: \"md\",\n  },\n});\n\ntype ButtonVariants = VariantProps<typeof badgeVariants>;\n\nexport interface BadgeProps\n  extends Omit<ComponentProps<\"span\">, \"color\">,\n    ButtonVariants {\n  children?: ReactNode;\n}\n\nconst Badge: React.FC<BadgeProps> = ({\n  variant,\n  color,\n  size,\n  shadow,\n  children,\n  ...props\n}) => {\n  return (\n    <>\n      <span\n        {...props}\n        className={badgeVariants({\n          variant,\n          color,\n          size,\n          shadow,\n        })}\n      >\n        {children}\n      </span>\n    </>\n  );\n};\n\nBadge.displayName = \"Badge\";\n\nexport { Badge, badgeVariants };\n"
    }
  ],
  "type": "components:ui"
}