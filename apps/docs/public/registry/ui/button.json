{
  "name": "button",
  "dependencies": [
    ""
  ],
  "files": [
    {
      "name": "button.tsx",
      "content": "import { ComponentProps, ReactNode } from \"react\";\nimport { VariantProps, tv } from \"tailwind-variants\";\n\nconst buttonVariants = tv({\n  base: \"text-white rounded-lg w-fit text-center font-medium focus:outline-none focus:ring-2\",\n  variants: {\n    variant: {\n      solid: \"\",\n      outlined: \"\",\n      ghost: \"\",\n    },\n    color: {\n      primary: \"\",\n      secondary: \"\",\n      success: \"\",\n      warning: \"\",\n      error: \"\",\n    },\n    size: {\n      xs: \"py-2 px-3 text-xs\",\n      sm: \"py-2 px-3 text-sm\",\n      md: \"px-5 py-2.5 text-base\",\n      lg: \"py-3 px-5 text-lg\",\n      xl: \"py-6 px-6 text-xl\",\n    },\n    fullWidth: {\n      true: \"w-full\",\n    },\n    rounded: {\n      true: \"rounded-full\",\n    },\n    disabled: {\n      true: \"opacity-50 !cursor-not-allowed\",\n    },\n    shadow: {\n      true: \"shadow-lg\",\n    },\n  },\n  compoundVariants: [\n    // SOLID\n    {\n      variant: \"solid\",\n      color: \"primary\",\n      class:\n        \"bg-blue-400 hover:bg-blue-500 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n    },\n    {\n      variant: \"solid\",\n      color: \"secondary\",\n      class:\n        \"bg-purple-400 hover:bg-purple-500 focus:ring-purple-300 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-800\",\n    },\n    {\n      variant: \"solid\",\n      color: \"success\",\n      class:\n        \"bg-green-400 hover:bg-green-500 focus:ring-green-300 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\",\n    },\n    {\n      variant: \"solid\",\n      color: \"warning\",\n      class:\n        \"bg-yellow-400 hover:bg-yellow-500 focus:ring-yellow-300 dark:bg-yellow-600 dark:hover:bg-yellow-700 dark:focus:ring-yellow-800\",\n    },\n    {\n      variant: \"solid\",\n      color: \"error\",\n      class:\n        \"bg-red-400 hover:bg-red-500 focus:ring-red-300 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\",\n    },\n\n    // OUTLINED\n    {\n      variant: \"outlined\",\n      color: \"primary\",\n      class:\n        \"text-blue-400 hover:text-white border border-blue-400 hover:bg-blue-500 focus:ring-blue-300 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-600 dark:focus:ring-blue-800\",\n    },\n    {\n      variant: \"outlined\",\n      color: \"secondary\",\n      class:\n        \"text-purple-400 hover:text-white border border-purple-400 hover:bg-purple-500 focus:ring-purple-300 dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900\",\n    },\n    {\n      variant: \"outlined\",\n      color: \"success\",\n      class:\n        \"text-green-400 hover:text-white border border-green-400 hover:bg-green-500 focus:ring-green-300 dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800\",\n    },\n    {\n      variant: \"outlined\",\n      color: \"warning\",\n      class:\n        \"text-yellow-400 hover:text-white border border-yellow-400 hover:bg-yellow-500 focus:ring-yellow-300 dark:border-yellow-300 dark:text-yellow-300 dark:hover:text-white dark:hover:bg-yellow-400 dark:focus:ring-yellow-900\",\n    },\n    {\n      variant: \"outlined\",\n      color: \"error\",\n      class:\n        \"text-red-400 hover:text-white border border-red-400 hover:bg-red-500 focus:ring-red-300 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900\",\n    },\n\n    // SHADOW\n    {\n      shadow: true,\n      color: \"primary\",\n      class: \"shadow-blue-400/50\",\n    },\n    {\n      shadow: true,\n      color: \"secondary\",\n      class: \"shadow-purple-400/50\",\n    },\n    {\n      shadow: true,\n      color: \"success\",\n      class: \"shadow-green-400/50\",\n    },\n    {\n      shadow: true,\n      color: \"warning\",\n      class: \"shadow-yellow-400/50\",\n    },\n    {\n      shadow: true,\n      color: \"error\",\n      class: \"shadow-red-400/50\",\n    },\n  ],\n  defaultVariants: {\n    variant: \"solid\",\n    color: \"primary\",\n    size: \"md\",\n  },\n});\n\ntype ButtonVariants = VariantProps<typeof buttonVariants>;\n\nexport interface ButtonProps\n  extends Omit<ComponentProps<\"button\">, \"color\" | \"disabled\" | \"size\">,\n    ButtonVariants {\n  children: ReactNode;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  variant,\n  color,\n  size,\n  disabled,\n  fullWidth,\n  rounded,\n  shadow,\n  children,\n  className,\n  ...props\n}) => {\n  return (\n    <button\n      className={buttonVariants({\n        variant,\n        color,\n        rounded,\n        disabled: disabled ? true : false,\n        size,\n        shadow,\n        fullWidth,\n        className,\n      })}\n      disabled={disabled ? true : false}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"
    }
  ],
  "type": "components:ui"
}